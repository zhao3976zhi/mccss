<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!-- 定义repository group-->
    <groupId>cypro</groupId>
    <artifactId>cypro-parent</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>cypro-parent</name>
    <!-- 定义管理模块 每次打包时可根据需要可选择性打包跳过某些模块  -->
    <modules>
        <!-- cypro-ascpay -->
        <module>cypro-ascpay</module>
        <module>cypro-reptile</module>
        <module>ascpayweb</module>
    </modules>

    <!-- 定义变量，在此管理所有模块的对外版本号 -->
    <properties>
        <!-- 定义公共的jar包版本  -->
        <spring.boot.version>2.0.1.RELEASE</spring.boot.version>
        <mybatis.version>3.4.0</mybatis.version>
        <druid.version>1.1.6</druid.version>
        <shiro.version>1.2.2</shiro.version>
        <dubbo.version>2.6.5</dubbo.version>
        <zookeeper.versoin>3.4.9</zookeeper.versoin>
        <zkclient.version>0.9</zkclient.version>
        <alibaba.fastjson.version>1.2.35</alibaba.fastjson.version>
    </properties>

    <!-- 对所依赖jar包进行版本管理的管理器 不会下载jar-->
    <dependencyManagement>
        <dependencies>
            <!-- Spring Boot的父级依赖-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- 对所依赖jar包进行版本管理的管理器 会下载jar -->
    <dependencies>
        <!-- 批量修改项目各模块的版本号，灵活推进或回退版本，避免主干每次更新代码，立即对所有分支产生影响 -->
        <dependency>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>versions-maven-plugin</artifactId>
            <version>2.5</version>
        </dependency>
        <!-- 支持全栈式Web开发，包括Tomcat和spring-webmvc。 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>

        </dependency>
        <!-- 支持Redis键值存储数据库，包括spring-redis -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <!-- 支持常规的测试依赖，包括JUnit、Hamcrest、Mockito以及spring-test模块-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- 集成freemarker 支持FreeMarker模板引擎-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-freemarker</artifactId>
        </dependency>
        <!-- 支持JDBC数据库-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
            <!-- 阿里巴巴的数据池管理数据源,排除tomcat-jdbc的默认配置dataSource -->
            <exclusions>
                <exclusion>
                    <groupId>org.apache.tomcat</groupId>
                    <artifactId>tomcat-jdbc</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- mybatis springboot依赖 -->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>1.3.0</version>
        </dependency>
        <!-- 集成shiro -->
        <!-- shiro spring. -->
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-core</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-spring</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <!-- shiro ehcache -->
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-ehcache</artifactId>
            <version>${shiro.version}</version>
        </dependency>

        <!-- 只需引入spring-boot-devtools 即可实现热部署 -->
        <!-- <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
        </dependency> -->

        <!-- 添加缓存支持 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>

        <!-- 使用ehcache缓存方案 -->
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.tobato</groupId>
            <artifactId>fastdfs-client</artifactId>
            <version>1.26.1-RELEASE</version>
            <exclusions>
                <exclusion>
                    <groupId>ch.qos.logback</groupId>
                    <artifactId>logback-classic</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>


    <!-- 编译项目-->
    <build>
        <finalName>cypro-parent</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                    <delimiters>
                        <delimiter>$[*]</delimiter>
                    </delimiters>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>